---
// Sidebar component - displays the navigation sidebar
// This replaces the Jekyll include material-sidebar.html

import navigation from '../data/navigation.js';

interface Props {
  activeGroup?: string;
}

const { activeGroup } = Astro.props;

// Helper function to convert title to slug
function slugify(text) {
  return text
    .toString()
    .toLowerCase()
    .replace(/\s+/g, '-')     // Replace spaces with -
    .replace(/[^\w\-]+/g, '') // Remove all non-word chars
    .replace(/\-\-+/g, '-')   // Replace multiple - with single -
    .replace(/^-+/, '')       // Trim - from start of text
    .replace(/-+$/, '');      // Trim - from end of text
}

// Get the current page slug from the URL
const pagePath = Astro.url.pathname;
const pageSlug = pagePath.split('/').pop() || '';
---

<aside class="sidebar">
  <!-- toggle link for responsive version -->
  <span class="sidebar-toggle js-sidebar-toggle">
    <i class="fa fa-plus"></i>
  </span>

  <div class="row sidebar-logo">
    <a href="/" class="brand-logo">
      <img src="/img/logo/material-theme.svg" alt="Material Theme Logo" width="36" height="36" />
      <span>Material Theme</span>
    </a>
  </div>

  <div class="search" id="search">
    <!-- Search will be added later -->
  </div>

  <nav class="sidebar-links">
    {navigation.map((group) => {
      const groupSlug = slugify(group.title);
      const isActive = activeGroup === groupSlug;

      return (
        <ul data-collapsible="accordion"
            class:list={["sidebar-link-group", "collapsible", { active: isActive }]}>
          <li>
            {group.separator && <hr />}
            <a class:list={[
                "collapsible-header",
                "title",
                { active: isActive },
                { "nav-link": !group.pages }
              ]}
              href={!group.pages ? `/docs/${groupSlug}` : undefined}>
              {group.title}
            </a>

            {group.pages && (
              <ul class="nav sidebar-list collapsible-body">
                {group.pages.map((doc) => {
                  const docSlug = slugify(doc.title);
                  const isDocActive = activeGroup === groupSlug && pageSlug === docSlug;

                  return (
                    <li class:list={["link-section", "sidebar-section", { active: isDocActive }]}>
                      <a href={`/docs/${groupSlug}/${docSlug}`}
                         class="nav-link sidebar-list-item"
                         data-slug={docSlug}>
                        {doc.title}
                      </a>
                    </li>
                  );
                })}
              </ul>
            )}
          </li>
        </ul>
      );
    })}
  </nav>
</aside>

<script>
  // Initialize sidebar toggle functionality
  document.addEventListener('DOMContentLoaded', function() {
    const sidebarToggle = document.querySelector('.js-sidebar-toggle');
    if (sidebarToggle) {
      sidebarToggle.addEventListener('click', function() {
        document.querySelector('.sidebar').classList.toggle('open');
      });
    }
  });
</script>
